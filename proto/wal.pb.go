// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/wal.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LogEntry represents a single entry in the write-ahead log.
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	TimestampMs   int64                  `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_proto_wal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_proto_wal_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogEntry) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

// Client tool specific messages
type ClientRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Entry         *LogEntry              `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	mi := &file_proto_wal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_proto_wal_proto_rawDescGZIP(), []int{1}
}

func (x *ClientRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ClientRequest) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type ClientResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Entry         *LogEntry              `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientResponse) Reset() {
	*x = ClientResponse{}
	mi := &file_proto_wal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientResponse) ProtoMessage() {}

func (x *ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientResponse.ProtoReflect.Descriptor instead.
func (*ClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_wal_proto_rawDescGZIP(), []int{2}
}

func (x *ClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClientResponse) GetEntry() *LogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

var File_proto_wal_proto protoreflect.FileDescriptor

const file_proto_wal_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/wal.proto\x12\x05proto\"Q\n" +
	"\bLogEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12!\n" +
	"\ftimestamp_ms\x18\x03 \x01(\x03R\vtimestampMs\"P\n" +
	"\rClientRequest\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12%\n" +
	"\x05entry\x18\x02 \x01(\v2\x0f.proto.LogEntryR\x05entry\"k\n" +
	"\x0eClientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x05entry\x18\x03 \x01(\v2\x0f.proto.LogEntryR\x05entryB-Z+github.com/muhammadmontasir/simplewal/protob\x06proto3"

var (
	file_proto_wal_proto_rawDescOnce sync.Once
	file_proto_wal_proto_rawDescData []byte
)

func file_proto_wal_proto_rawDescGZIP() []byte {
	file_proto_wal_proto_rawDescOnce.Do(func() {
		file_proto_wal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_wal_proto_rawDesc), len(file_proto_wal_proto_rawDesc)))
	})
	return file_proto_wal_proto_rawDescData
}

var file_proto_wal_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_wal_proto_goTypes = []any{
	(*LogEntry)(nil),       // 0: proto.LogEntry
	(*ClientRequest)(nil),  // 1: proto.ClientRequest
	(*ClientResponse)(nil), // 2: proto.ClientResponse
}
var file_proto_wal_proto_depIdxs = []int32{
	0, // 0: proto.ClientRequest.entry:type_name -> proto.LogEntry
	0, // 1: proto.ClientResponse.entry:type_name -> proto.LogEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_wal_proto_init() }
func file_proto_wal_proto_init() {
	if File_proto_wal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_wal_proto_rawDesc), len(file_proto_wal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_wal_proto_goTypes,
		DependencyIndexes: file_proto_wal_proto_depIdxs,
		MessageInfos:      file_proto_wal_proto_msgTypes,
	}.Build()
	File_proto_wal_proto = out.File
	file_proto_wal_proto_goTypes = nil
	file_proto_wal_proto_depIdxs = nil
}
